plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.drivesense.drivesense'
    compileSdk 34

    defaultConfig {
        applicationId "com.drivesense.drivesense"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding true
    }

    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

def faceLandmarkerModelUrl = 'https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/latest/face_landmarker.task'
def faceLandmarkerModelPath = "${projectDir}/src/main/assets/face_landmarker.task"

tasks.register('downloadFaceLandmarkerModel') {
    outputs.file(faceLandmarkerModelPath)
    doLast {
        def destination = file(faceLandmarkerModelPath)
        if (destination.exists()) {
            logger.lifecycle("MediaPipe Face Landmarker model already present at ${destination}")
            return
        }

        destination.parentFile.mkdirs()
        logger.lifecycle("Downloading MediaPipe Face Landmarker model from ${faceLandmarkerModelUrl}")
        try {
            new URL(faceLandmarkerModelUrl).withInputStream { input ->
                destination.withOutputStream { output ->
                    output << input
                }
            }
            logger.lifecycle("Saved MediaPipe Face Landmarker model to ${destination}")
        } catch (Exception exception) {
            destination.delete()
            throw new GradleException("Unable to download MediaPipe Face Landmarker model", exception)
        }
    }
}

preBuild.dependsOn downloadFaceLandmarkerModel

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.3'
    implementation 'androidx.activity:activity-ktx:1.9.2'

    implementation 'androidx.camera:camera-core:1.3.4'
    implementation 'androidx.camera:camera-camera2:1.3.4'
    implementation 'androidx.camera:camera-lifecycle:1.3.4'
    implementation 'androidx.camera:camera-view:1.3.4'

    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation 'com.google.mediapipe:tasks-vision:0.10.14'
    implementation 'com.google.android.gms:play-services-location:21.3.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}
